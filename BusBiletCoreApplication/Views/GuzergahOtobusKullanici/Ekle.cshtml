@using EntityLayer;
@using System.Text;
@model BiletSeferGuzergahKullaniciModel
@{
    ViewData["Title"] = "Ekle";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    
    <style>
        .card-header .fa {
            transition: .3s transform ease-in-out;
        }

        .card-header .collapsed .fa {
            transform: rotate(90deg);
        }

        .card {
            margin: 10px 0px;
        }

        .text-type {
            text-decoration: none;
            color: #262838;
        }
    </style>
    <meta name="viewport" content="width=device-width" />
    <title>admin</title>
    <link href="~/admin_dashboard/css/biletcollapse.css" rel="stylesheet" />
    <!-- JavaScript Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" crossorigin="anonymous"></script>
</head>
<body>
    <div class="p-2">
        <h3>Bilet Ekle</h3>
        @using (Html.BeginForm("Ekle", "GuzergahOtobusKullanici", FormMethod.Post, new { @class = "form-group" }))
        {
            
            @Html.Label("Seri No")
            @Html.TextBox("seriNo","",new { @class = "form-control" })
            @Html.ValidationMessageFor(bilet=>bilet.biletModel.seriNo,"",new { @class ="text-danger" })
            <br />
            @Html.Label("Ödeme Tipi")
            <select class="form-control" name="odemeTipi">
                <option>False</option>
                <option>True</option>
            </select>
            <br />
            @Html.Label("Koltuk No")
            @Html.TextBox("koltukNo","",new { @class = "form-control" })
            @Html.ValidationMessageFor(bilet=>bilet.biletModel.koltukNo ,"",new { @class ="text-danger" })
            <br />
            @Html.Label("Bilet Kesim Tarihi")
            @Html.TextBox("biletKesimTarihi","",new { @class = "form-control" })
            @Html.ValidationMessageFor(bilet=>bilet.biletModel.biletKesimTarihi ,"",new { @class ="text-danger" })
            <br />
            @Html.Label("Yolcu Ad")
            @Html.TextBox("yolcuAd","",new { @class = "form-control" })
            @Html.ValidationMessageFor(bilet=>bilet.biletModel.yolcuAd,"",new { @class ="text-danger" })
            <br />
            @Html.Label("Yolcu Soyad")
            @Html.TextBox("yolcuSoyad","",new { @class = "form-control" })
            @Html.ValidationMessageFor(bilet=>bilet.biletModel.yolcuSoyad ,"",new { @class ="text-danger" })
            <br />
            @Html.Label("Yolcu Tc")
            @Html.TextBox("yolcuTc","",new { @class = "form-control" })
            @Html.ValidationMessageFor(bilet=>bilet.biletModel.yolcuTc ,"",new { @class ="text-danger" })
            <br />
            @Html.Label("Yolcu Cinsiyet")
            <select class="form-control" name="yolcuCinsiyet">
                <option>False</option>
                <option>True</option>
            </select>
            <br />
            
            @Html.Label("Seferler")
            var distinctSefer = Model.seferModel
            
            .GroupBy(sefer => new { sefer.guzergah.kalkisYeri, sefer.guzergah.varisYeri })
            .Select(g => g.First())
            .ToList();
            List<SelectListItem> selectListitem = distinctSefer.ConvertAll(sefer =>
            {

                return new SelectListItem()
                    {
                        Text = (sefer.guzergah.kalkisYeri + " - " + sefer.guzergah.varisYeri).ToUpper().ToString(),
                        Value = sefer.guzergahId.ToString(),
                        Selected = false
                    };
            });
            @Html.DropDownList("sehirlerDropdown",selectListitem, new { @onchange = "SelectSubItem()",@class = "form-control sehirlerDropdown"})

            

            @Html.Label("Sefer Tarih Saatleri")
            <select id="seferId" name="seferId" class="form-control">

            </select>
            
            <br />
            @Html.Label("Kullanıcı Adı")
            <select name="kullaniciId" class="form-control">

                @foreach (var item in Model.kullaniciModel)
                {
                    var combine = @item.kullaniciAd;
                    <option value=" @item.kullaniciId">@combine</option>
                }
            </select>
            <br />
            @Html.Label("Durum")
            <select class="form-control" name="silindi">
                <option>False</option>
                <option>True</option>
            </select>
            <br />
            <input class="form-control btn btn-primary" type="submit" value="Ekle" />
        }
    </div>

    <script src="~/admin_dashboard/js/dropdown.js"></script>
</body>
</html>

<script>
    function SelectSubItem() {
        
        //sehilerDropdown'ın kendisine ulaşıyoruz
    var sehirlerDropdown = document.getElementsByClassName("sehirlerDropdown")[0];
    
    //Seçilen itemın değerine (guzergahId) ulaşıyoruz.
    var selectedItemValue = sehirlerDropdown.options[sehirlerDropdown.selectedIndex].value;
    
    //çalışma zamanlı ilgili güzergahın seferlerini oluşturmak için sefer selectine ulaşıyoruz. 
    var seferSelect = document.getElementById("seferId");
    
    //önceden eklenmiş seferleri temizlemek için bu while döngüsünü kullanıyoruz.
    while (seferSelect.children[0]) {
        seferSelect.children[0].remove();
    }
        //Razor tarafında ki listeye erişiyoruz.
        var list =@Json.Serialize(Model.seferModel);

        //çalışma zamanlı ilgili güzergahın seferlerini oluşturmak için sefer selectine optionlar ekliyoruz.
        for(var i=0;i<list.length;i++){
            if (list[i].guzergahId==selectedItemValue) { 
                     var option = document.createElement("option");
                option.setAttribute("value", parseInt(list[i].seferId));
                option.innerHTML  = "Tarih : " + list[i].tarih + " | Kalkış Saati : " + list[i].kalkisSaat + " | Bilet Fiyatı : " + list[i].biletFiyat + "TL";
                console.log(list[i].seferId);
                seferSelect.appendChild(option);
            }
        }
   
}
</script>




